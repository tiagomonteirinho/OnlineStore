@model UF5423_SuperShop.Models.RegisterViewModel;

@{
    ViewData["Title"] = "Register";
}

<h2>Register</h2>

<div class="row">
    <div class="col-md-4 offset-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>
            <div class="form-group">
                <label asp-for="FirstName">First name</label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName">Last name</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="Username">Email (username)</label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <select asp-for="CountryId" asp-items="Model.Countries" class="form-control"></select>
                <span asp-validation-for="CountryId" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="CityId" class="control-label"></label>
                <select asp-for="CityId" asp-items="Model.Cities" class="form-control"></select>
                <span asp-validation-for="CityId" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address">Address</label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber">Phone number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password">Password</label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConfirmPassword">Confirm password</label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-warning"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Register account" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div class="text-success">
    <p>
        @ViewBag.Message
    </p>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () // Wait for HTML load-up.
        {
            $("#CountryId").change(function () // When CountryId selection is changed
            {
                $("#CityId").empty(); // Empty CityId selection.
                $.ajax( // Update view section.
                {
                    url: '@Url.Action("GetCitiesAsync", "Account")', // Action URL route.
                    type: 'POST', // Action type.
                    dataType: 'json', // Read data in JSON format.
                    data: // Expected data parameters.
                    { 
                        countryId: $("#CountryId").val() // Parameter value.
                    },
                    success: // If action is successful
                    function (cities) // Execute function with cities list parameter.
                    {
                        debugger;
                        $("#CityId").append('<option value="0">(Select a city...)</option>'); // Override default option.
                        $.each(cities, // For each city
                        function (i, city) // Execute function with city id and city parameters.
                        {
                            $("#CityId").append('<option value="' + city.id + '">' + city.name + '</option>'); // Add option.
                        });
                    },
                    error: // If action is unsuccessful
                    function (ex) // Execute function with exception parameter.
                    {
                        debugger;
                        alert('Failed to retrieve cities.' + ex); // Show alert.
                    }
                });
                return false;
            })
        });
    </script>
}
